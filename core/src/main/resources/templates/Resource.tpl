package io.nti.jaxrs.impl.generated;

/**
 * This code was generated by the JAX-RS annotation processor
 */

import Resource;
import RequestContext;

import javax.annotation.Generated;
import javax.ws.rs.core.Response;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Generated("{{ generator }}")
public class {{ proxyName }} extends Resource {

    private final Pattern base = Pattern.compile("{{ base }}");
    {% for regex in regexs %}private final Pattern regex{{ loop.index }} = Pattern.compile("{{ regex }}");
    {% endfor %}

    public Response process(RequestContext context) {
        final String method = context.getMethod();
        final String uri = context.getUri();
        final {{ name }} resource = new {{ name }}();

        Matcher matcher;
        {% for method in methods %}

        if ("{{ method.httpVerb }}".equals(method) && (matcher = regex{{ loop.index }}.matcher(uri)).matches()) {
            {% if method.return != 'void' and method.httpVerb != 'HEAD' %}final {{ method.return }} result = {% endif %}resource.{{ method.name }}({{ method.parameters | join(', ') }});
            {% if method.return != 'void' and method.httpVerb != 'HEAD'%}

            if (result == null) {
                return Response.status(Response.Status.ACCEPTED).build();
            } else {
                {% if method.return == 'javax.ws.rs.core.Response' %}return result;{% elseif method.return == 'javax.ws.rs.core.GenericEntity' %}return Response.ok(result.getEntity()).build();{% else %}return Response.ok(result).build();{% endif %}

            }
            {% elseif method.httpVerb == 'HEAD'%}return Response.ok().build();
            {% else %}return Response.status(Response.Status.NO_CONTENT).build();{% endif %}

        }
        {% endfor %}

        return Response.status(Response.Status.NOT_FOUND).build();
    }

    public Pattern getBaseMatch() {
        return base;
    }
}